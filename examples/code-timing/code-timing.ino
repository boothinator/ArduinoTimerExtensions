#include <timerUtil.h>

/*
 * Arduino (and AVR) timers are simple counters that are synchronized with
 * some multiple of the system clock. This makes them useful for counting
 * exactly how many clock cycles code runs.
 * 
 * In this example, we'll repurpose the 16-bit Timer 1 to time how long it takes
 * to send "Hello World" over the serial line. Normally, Timer 1 (along with
 * other timers) is used to time PWM signals that are generated by analogWrite().
 * Using Timer 1 in this way interferes with all of the PWM signals for pins
 * associated with Timer 1. For the Arduino Uno, this interferes with
 * analogWrite() on pins 9 and 10.
 */
void setup() {
  Serial.begin(115200);

  // Configure Timer1
  configureTimerClock(Timer::Timer1, TimerClock::Clk);
  configureTimerMode(Timer::Timer1, TimerMode::Normal);

  unsigned int startTicks = TCNT1;
  Serial.println("Hello World");
  unsigned int endTicks = TCNT1;

  Serial.print("Printing \"Hello World\" took ");
  Serial.print(endTicks - startTicks);
  Serial.println(" clock cycles");
}

void loop() {
}
